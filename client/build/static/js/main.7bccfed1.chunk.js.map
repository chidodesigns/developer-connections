{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/spinner.gif","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_REPOS","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","devConnectToken","get","res","data","console","log","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","minLength","alerts","alert","length","map","Spinner","src","spinner","style","width","margin","display","alt","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","company","title","format","from","_id","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","ProfileTop","location","website","social","avatar","href","rel","twitter","facebook","linkedin","youtube","instagram","ProfileAbout","bio","skills","trim","split","skill","index","ProfileExperience","current","description","ProfileEducation","fieldofstudy","repos","getGithubRepos","username","repo","stargazers_count","watchers_count","getProfileById","userId","match","params","githubusername","withRouter","displaySocialInputs","toggleSocialInputs","join","ProfileItem","slice","getProfiles","profiles","addExperience","put","toDateDisabled","toggleDisabled","required","checked","disabled","cols","rows","addEducation","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","statusMessage","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","message","comment","class","getPost","NotFound","props","Component","component","rest","render","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","initialState","Alert","action","filter","getItem","combineReducers","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bccfed1.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT'\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const USER_LOADED = 'USER_LOADED'\nexport const AUTH_ERROR = 'AUTH_ERROR'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT = 'LOGOUT'\nexport const GET_PROFILE = 'GET_PROFILE'\nexport const GET_PROFILES = 'GET_PROFILES'\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\nexport const GET_REPOS = 'GET_REPOS'\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const POST_ERROR = 'POST_ERROR'\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\nexport const DELETE_POST = 'DELETE_POST'\nexport const ADD_POST  = 'ADD_POST'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\"","import { SET_ALERT, REMOVE_ALERT } from \"./types\"\n\nimport { v4 as uuidv4 } from 'uuid'\n\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    })\n\n    setTimeout(() => dispatch({\n        type: REMOVE_ALERT,\n        payload: id\n    }), timeout)\n\n}","import axios from 'axios'\nconst setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete axios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default setAuthToken","import axios from 'axios';\nimport { setAlert } from './alert'\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, CLEAR_PROFILE } from './types'\nimport setAuthToken from '../utils/setAuthToken'\n\n//  load User\nexport const loadUser = () => async dispatch => {\n\n    if (localStorage.devConnectToken) {\n        setAuthToken(localStorage.devConnectToken)\n    }\n\n    try {\n        const res = await axios.get('/api/auth')\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n        console.log(error)\n    }\n}\n\n//  Register User \nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ name, email, password })\n\n    try {\n        const res = await axios.post('/api/users', body, config)\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser())\n\n    } catch (error) {\n\n        const errors = error.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n//  Login User \nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ email, password })\n\n    try {\n        const res = await axios.post('/api/auth', body, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser())\n\n    } catch (error) {\n\n        const errors = error.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n}\n\n//  Logout / Clear\nexport const logout = () => dispatch => {\n    dispatch({ type: LOGOUT })\n    dispatch({ type: CLEAR_PROFILE })\n}","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { logout } from '../../actions/auth'\n\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n\n    const authLinks = (\n        <ul>\n             <li>\n                <Link to=\"/profiles\">\n                    Developers\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/posts\">\n                    Posts\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/dashboard\">\n                    <i className=\"fas fa-user\"><span className=\"hide-sm\"> Dashboard</span></i>\n                </Link>\n            </li>\n            <li>\n                <Link to=\"#!\" onClick={logout}><i className=\"fas fa-sign-out-alt\"></i>{' '}<span className=\"hide-sm\">Logout</span></Link>\n            </li>\n            \n\n        </ul>\n    )\n\n    const guestLinks = (\n        <ul>\n            <li>\n                <Link to=\"/profiles\">Developers</Link>\n            </li>\n            <li>\n                <Link to=\"/register\">Register</Link>\n            </li>\n            <li>\n                <Link to=\"/login\">Login</Link>\n            </li>\n        </ul>\n    )\n\n    return (\n        <nav className=\"navbar bg-dark\">\n            <h1>\n                <Link to=\"/\">\n                    <i className=\"fas fa-code\"></i> DevConnector\n                </Link>\n            </h1>\n            {!loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar)\n","import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\n\n\nexport const Landing = ({ isAuthenticated }) => {\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                    <h1 className=\"x-large\">Developer Connector</h1>\n                    <p className=\"lead\">\n                        Create a developer profile/portfolio, share posts and get help from\n                        other developers\n            </p>\n                    <div className=\"buttons\">\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Landing)","import React, { Fragment, useState } from \"react\"\n//  Enables Us To Work With Redux\nimport { connect } from \"react-redux\"\nimport { Link, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n\n//   State Management: Actions\nimport { setAlert } from '../../actions/alert'\nimport { register } from '../../actions/auth'\n\n//  Destructured & Pulled Out Of Props\nfunction Register({ setAlert, register, isAuthenticated }) {\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password !== password2) {\n            setAlert('Passwords Do Not Match', 'danger')\n        } else {\n            register({ name, email, password });\n        }\n    }\n\n    //  Redirected If Logged In\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} />\n                    <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n            Gravatar email</small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        value={password2}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n}\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { setAlert, register })(Register)","import React, { Fragment, useState } from \"react\"\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\nimport { login } from '../../actions/auth'\n\n\nfunction Login({ login, isAuthenticated }) {\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password)\n    }\n\n    //  Redirected If Logged In\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} />\n\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Dont have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </Fragment>\n\n    )\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { login })(Login)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport const Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        {alert.msg}\n    </div>\n))\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert)","export default __webpack_public_path__ + \"static/media/spinner.cfa8c151.gif\";","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner =  () => (\n    <Fragment>\n        <img\n            src={spinner}\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\n            alt=\"Loading...\"\n        />\n    </Fragment>\n)\n\nexport default Spinner;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst DashboardActions = () => {\n  return (\n    <div className=\"dash-buttons\">\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\n      </Link>\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\n      </Link>\n      <Link to=\"/add-education\" className=\"btn btn-light\">\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions","import axios from 'axios'\nimport { setAlert } from './alert'\n\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS} from './types'\n\n//  Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n\n    try {\n\n        const res = await axios.get('/api/profile/me')\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n\n}\n\n//  Get Profile By ID\nexport const getProfileById = userId => async dispatch => {\n  \n    try {\n\n        const res = await axios.get(`/api/profile/user/${userId}`)\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n\n}\n\n//  Get All Profiles\nexport const getProfiles = () => async dispatch => {\n    dispatch({type: CLEAR_PROFILE})\n    try {\n\n        const res = await axios.get('/api/profile')\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n\n}\n\n//  Get Github Repos \nexport const getGithubRepos = (username) => async dispatch => {\n   \n    try {\n\n        const res = await axios.get(`/api/profile/github/${username}`)\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n\n}\n\n// Create or Update Profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/profile', formData, config)\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert(edit ? 'Profile updated' : 'Profile Created', 'success'))\n\n        if (!edit) {\n            history.push('/dashboard')\n        }\n    } catch (err) {\n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n\n    }\n}\n\n//  Add Experience\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/experience', formData, config)\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Experience Added', 'success'))\n\n        history.push('/dashboard')\n    \n    } catch (err) {\n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n\n    }\n}\n\n//  Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.put('/api/profile/education', formData, config)\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Education Added', 'success'))\n\n        history.push('/dashboard')\n    \n    } catch (err) {\n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n\n    }\n}\n\n//  Delete Experience\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`)\n        dispatch ({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Experience removed', 'success'))\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.statusText,\n                status: error.response.status\n            }\n        })\n    }\n}\n\n//  Delete Education\nexport const deleteEducation = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`)\n        dispatch ({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Education removed', 'success'))\n    } catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.statusText,\n                status: error.response.status\n            }\n        })\n    }\n}\n\n//  Delete Account & Profile\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This cannot be undone!')){\n        try {\n            await axios.delete(`/api/profile`)\n            dispatch ({type: CLEAR_PROFILE})\n            dispatch ({type: ACCOUNT_DELETED})\n            dispatch(setAlert('Your Account has been permanently delete'))\n        } catch (error) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {\n                    msg: error.response.statusText,\n                    status: error.response.status\n                }\n            })\n        }\n    }\n    \n}","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport {deleteExperience} from '../../actions/profile'\n\n\nconst Experience = ({experience, deleteExperience}) => {\n\n    const experiences = experience.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className=\"hide-sm\">{exp.title}</td>\n            <td>\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment> - {\n                    exp.to === null ? (' Now') : (<Moment format='YYYY/MM/DD'>{exp.to}</Moment>)\n                }\n            </td>\n            <td>\n                <button className=\"btn btn-danger\" onClick={() => deleteExperience(exp._id)}>Delete</button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Experience Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Company</th>\n                        <th className=\"hide-sm\">Title</th>\n                        <th className=\"hide-sm\">Years</th>\n                        <th/>\n                    </tr>\n                </thead>\n                <tbody>\n                    {experiences}\n                </tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nExperience.propTypes = {\n\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired,\n\n}\n\nexport default connect(null, {deleteExperience})(Experience)\n","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport {deleteEducation} from '../../actions/profile'\n\n\nconst Education = ({education, deleteEducation}) => {\n\n    const educations = education.map(edu => (\n        <tr key={edu._id}>\n            <td>{edu.school}</td>\n            <td className=\"hide-sm\">{edu.degree}</td>\n            <td>\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment> - {\n                    edu.to === null ? (' Now') : (<Moment format='YYYY/MM/DD'>{edu.to}</Moment>)\n                }\n            </td>\n            <td>\n                <button className=\"btn btn-danger\" onClick={() => deleteEducation(edu._id)}>Delete</button>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\">Education Credentials</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>School</th>\n                        <th className=\"hide-sm\">Degree</th>\n                        <th className=\"hide-sm\">Years</th>\n                        <th/>\n                    </tr>\n                </thead>\n                <tbody>\n                    {educations}\n                </tbody>\n            </table>\n        </Fragment>\n    )\n}\n\nEducation.propTypes = {\n\n    education: PropTypes.array.isRequired,\n    deleteEducation: PropTypes.func.isRequired,\n\n}\n\nexport default connect(null, {deleteEducation})(Education)\n","import React, { useEffect, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport DashboardActions from './DashboardActions'\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile'\n\n\n\nconst Dashboard = ({\n    getCurrentProfile,\n    auth: { user },\n    profile: { profile, loading },\n    deleteAccount\n}) => {\n\n    useEffect(() => {\n        getCurrentProfile();\n    }, [getCurrentProfile])\n\n    return loading && profile === null ? <Spinner /> : \n        <Fragment>\n            <h1 className=\"large text-primary\">Dashboard</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n            </p>\n            {profile !== null ? \n            <Fragment>\n                <DashboardActions/> \n                <Experience experience={profile.experience}/> \n                <Education education={profile.education}/>   \n                <div className=\"my-2\">\n                    <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n                        <i className=\"fas fa-user-minus\"></i> Delete My Account\n                    </button>\n                </div>\n            </Fragment> : (\n                <Fragment>\n                    <p>You have not yet setup a profile, please add some info</p>\n                    <Link to='/create-profile' className='btn btn-primary my-1'>Create  Profile</Link>\n                </Fragment>\n            )}\n        </Fragment>\n    \n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\n      <h1 className=\"large\">{name}</h1>\n      <p className=\"lead\">\n        {status} {company && <span> at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className=\"icons my-1\">\n        {website && (\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-globe fa-2x\"></i>\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-twitter fa-2x\"></i>\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-facebook fa-2x\"></i>\n          </a>\n        )}\n\n        {social && social.linkedin && (\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-linkedin fa-2x\"></i>\n          </a>\n        )}\n\n        {social && social.youtube && (\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-youtube fa-2x\"></i>\n          </a>\n        )}\n\n        {social && social.instagram && (\n           <a href={social && social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n           <i className=\"fab fa-instagram fa-2x\"></i>\n         </a>\n        )}\n\n    \n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => {\n  return (\n    <div className=\"profile-about bg-light p-2\">\n      {bio && (\n        <Fragment>\n          <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\n          <p>\n           {bio}\n          </p>\n          <div className=\"line\"></div>\n        </Fragment>\n      )}\n\n      <h2 className=\"text-primary\">Skill Set</h2>\n      <div className=\"skills\">\n        {skills.map((skill, index) => (\n            <div className=\"p-1\" key={index}>\n                <i className=\"fas fa-check\"></i>{skill}\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from 'react'\nimport Moment from 'react-moment'\nimport PropTypes from 'prop-types'\n\nconst ProfileExperience = ({experience: {\n    company,\n    title,\n    location,\n    current,\n    to, \n    from,\n    description\n}}) => {\n    return (\n        <div>\n           <h3 className=\"text-dark\">{company}</h3>\n           <p>\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment>  - {!to ? \"Now\" : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n            </p> \n            <p>\n                <strong>Position:</strong> {title}\n            </p>\n            <p>\n                <strong>Description: </strong> {description}\n            </p>\n        </div>\n    )\n}\n\nProfileExperience.propTypes = {\n    // experience: PropTypes.array.isRequired,\n    experience: PropTypes.object.isRequired,\n}\n\nexport default ProfileExperience\n","import React from 'react'\nimport Moment from 'react-moment'\nimport PropTypes from 'prop-types'\n\nconst ProfileEducation = ({education: {\n    school,\n    degree,\n    fieldofstudy,\n    current,\n    to, \n    from,\n    description\n}}) => {\n    return (\n        <div>\n           <h3 className=\"text-dark\">{school}</h3>\n           <p>\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment>  - {!to ? \"Now\" : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n            </p> \n            <p>\n                <strong>Degree:</strong> {degree}\n            </p>\n            <p>\n                <strong>Field Of Study:</strong> {fieldofstudy}\n            </p>\n            <p>\n                <strong>Description: </strong> {description}\n            </p>\n        </div>\n    )\n}\n\nProfileEducation.propTypes = {\n    // experience: PropTypes.array.isRequired,\n    education: PropTypes.object.isRequired,\n}\n\nexport default ProfileEducation\n","import React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getGithubRepos } from '../../actions/profile' \n\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\n\n    useEffect(() => {\n        getGithubRepos(username)\n    },[getGithubRepos])\n\n    return (\n        <div className=\"profile-github\">\n            {repos.length > 0 ? (\n                <h2 className=\"text-primary my-1\">Github Repos</h2>\n            ) : (<div></div>)\n                \n            }\n            \n            {repos === null ? <Spinner/> :(\n                repos.map((repo) => (\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n                        <div>\n                            <h4>\n                                <a href=\"repo.html_url\" target=\"_blank\" rel='noopener noreferrer'>\n                                    {repo.name}\n                                </a>\n                            </h4>\n                            <p>{repo.description}</p>\n                        </div>\n                        <div>\n                            <ul>\n                                <li className=\"badge badge-primary\">\n                                    Stars: {repo.stargazers_count}\n                                </li>\n                                <li className=\"badge badge-dark\">\n                                    Watchers: {repo.watchers_count}\n                                </li>\n                                <li className=\"badge badge-light\">\n                                    Forks: {repo.stargazers_count}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    )\n}\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n})\n\n\n\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub)\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 className=\"text-primary\">Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No Experience Credentials</h4>\n              )}\n            </div>\n            <div className=\"profile-edu bg-white p-2\">\n              <h2 className=\"text-primary\">Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No Education Credentials</h4>\n              )}\n            </div>\n            {profile.githubusername && (\n                <ProfileGithub username={profile.githubusername}/>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile } from \"../../actions/profile\";\n\nconst CreateProfile = ({createProfile, history}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history);\n    }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n};\n\n\n\nexport default connect(null, {createProfile})(withRouter(CreateProfile));\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst EditProfile = ({ profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n      getCurrentProfile();\n      setFormData({\n          company: loading || !profile.company ? '' : profile.company,\n          website: loading || !profile.website ? '' : profile.website,\n          location: loading || !profile.location ? '' : profile.location,\n          status: loading || !profile.status ? '' : profile.status,\n          skills: loading || !profile.skills ? '' : profile.skills.join(','),\n          githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n          bio: loading || !profile.bio ? '' : profile.bio,\n          twitter: loading || !profile.social ? '' : profile.social.twitter,\n          facebook: loading || !profile.social ? '' : profile.social.facebook,\n          linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n          youtube: loading || !profile.social ? '' : profile.social.youtube,\n          instagram: loading || !profile.social ? '' : profile.social.instagram\n      })\n  },[loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n}) => {\n  return (\n    <div className=\"profile bg-light\">\n      <img src={avatar} alt=\"\" className=\"round-img\" />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className=\"text-primary\">\n            <i className=\"fas fa-check\"></i> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from '../layout/Spinner'\nimport ProfileItem from './ProfileItem'\nimport {getProfiles} from '../../actions/profile'\nimport { connect } from 'react-redux'\n\nconst Profiles = ({getProfiles, profile: {profiles, loading}}) => {\n\n    useEffect(() => {\n        getProfiles()\n    },[getProfiles])\n\n    return (\n        <Fragment>\n            {\n            loading ? <Spinner/> : \n                <Fragment>\n                    <h1 className=\"large text-primary\">Developers</h1>\n                    <p className=\"lead\">\n                        <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\n                    </p>\n                    <div className=\"profiles\">\n                        {profiles.length > 0 ? (\n                            profiles.map(profile => (\n                                <ProfileItem key={profile._id} profile={profile}/>\n                            ))\n                        ) : <h4>No profiles found...</h4>}\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n}) \n\nexport default connect(mapStateToProps, {getProfiles})(Profiles)\n","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\n\n\nconst AddExperience = ({addExperience, history}) => {\n\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { company, title, location, from, to, current, description} = formData\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Add An Experience</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => {\n          e.preventDefault();\n          addExperience(formData, history,)\n      }}>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)} required />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                setFormData({...formData, current: !current})\n                toggleDisabled(!toDateDisabled);\n            }}/> {' '}Current Job\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description} onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\n\n\nconst AddEducation = ({addEducation, history}) => {\n\n    const [formData, setFormData] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { school, degree, fieldofstudy, from, to, current, description} = formData\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Add Your Education</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp you have attended\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => {\n          e.preventDefault();\n          addEducation(formData, history,)\n      }}>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)}/>\n        </div>\n        <div className=\"form-group\">\n          <h4>From Date</h4>\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)}/>\n        </div>\n        <div className=\"form-group\">\n          <p>\n            <input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                setFormData({...formData, current: !current})\n                toggleDisabled(!toDateDisabled);\n            }}/> {' '}Current School\n          </p>\n        </div>\n        <div className=\"form-group\">\n          <h4>To Date</h4>\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Program Description\"\n            value={description} onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => {\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {showActions && (\n          <Fragment>\n            <button\n              onClick={(e) => addLike(_id)}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-up\"></i>{\" \"}\n              {likes.length > 0 && <span>{likes.length}</span>}\n            </button>\n            <button\n              onClick={(e) => removeLike(_id)}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i className=\"fas fa-thumbs-down\"></i>\n            </button>\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n              Discussion{\" \"}\n              {comments.length > 0 && (\n                <span className=\"comment-count\">{comments.length}</span>\n              )}\n            </Link>\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={(e) => deletePost(_id)}\n                type=\"button\"\n                className=\"btn btn-danger\"\n              >\n                <i className=\"fas fa-times\"></i>\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true\n}\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","import axios from 'axios'\nimport {setAlert} from './alert'\nimport {GET_POSTS,GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT} from './types'\n\n//  Get Posts \nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts')\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Get Single Post \nexport const getPost = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`)\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Add Like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`api/posts/like/${id}`)\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {\n                id,\n                likes: res.data\n            }\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Remove Like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`api/posts/unlike/${id}`)\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {\n                id,\n                likes: res.data\n            }\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Delete Post\nexport const deletePost = id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/posts/${id}`)\n        dispatch({\n            type: DELETE_POST,\n            payload: {id}\n        })\n        dispatch(setAlert('Post Removed', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Add Post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type':'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`api/posts/`, formData, config)\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        })\n        dispatch(setAlert('Post Created', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type':'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config)\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        })\n        dispatch(setAlert('Comment Added', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n\n    try {\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        })\n        dispatch(setAlert('Comment Removed', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.message,\n                status: err.response.status\n            }\n        })\n        \n    }\n}","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState(\"\");\n  return (\n    <div className=\"post-form\">\n      <div className=\"bg-primary p\">\n        <h3>Say Something...</h3>\n      </div>\n      <form className=\"form my-1\" onSubmit={e => {\n          e.preventDefault();\n          addPost({text})\n          setText('')\n      }}>\n        <textarea\n          name=\"text\"\n          cols=\"30\"\n          rows=\"5\"\n          placeholder=\"Create a post\"\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {getPosts} from '../../actions/post'\nimport Spinner from '../layout/Spinner'\nimport PostItem from './PostItem'\nimport PostForm from './PostForm'\n\n\nconst Posts = ({getPosts, post:{posts, loading}}) => {\n\n    useEffect(() => {\n        getPosts()\n    }, [getPosts])\n\n    return (\n        loading ? <Spinner/> : (\n            <Fragment>\n                <h1 className=\"large text-primary\">Posts</h1>\n                <p className=\"lead\">\n                    <i className=\"fas fa-user\"> Welcome To The Community</i>\n                </p>\n                <PostForm/>\n                <div className=\"posts\">\n                {posts.map(post => (\n                    <PostItem key={post._id} post={post}/>\n                ))}\n            </div>\n            </Fragment>\n         \n        )\n     \n    )\n}\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, {getPosts})(Posts)\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actions/post\";\n\nconst CommentForm = ({ postId, addComment }) => {\nconst [text, setText] = useState('')\n  return (\n    <div>\n      <div className=\"post-form\">\n        <div className=\"bg-primary p\">\n          <h3>Leave A Comment</h3>\n        </div>\n        <form\n          className=\"form my-1\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            addComment(postId, { text });\n            setText(\"\");\n          }}\n        >\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Create a post\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            required\n          ></textarea>\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post'\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => {\n  return (\n    <div class=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img\n            class=\"round-img\"\n            src={avatar}\n            alt=\"\"\n          />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p class=\"my-1\">\n          {text}\n        </p>\n        <p class=\"post-date\">Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment></p>\n        {\n            !auth.loading && user === auth.user._id && (\n                <button onClick={e => deleteComment(postId, _id)} type=\"button\" className=\"btn btn-danger\">\n                    <i className=\"fas fa-times\"></i>\n                </button>\n            )\n        }\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);\n","import React, { Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getPost } from '../../actions/post'\nimport PostItem from '../posts/PostItem'\nimport CommentForm from '../post/CommentForm'\nimport CommentItem from '../post/CommentItem'\nconst Post = ({getPost, post: {post, loading}, match}) => {\n\n    useEffect(() => {\n        getPost(match.params.id)\n    }, [getPost])\n\n    return (\n        loading || post === null ? <Spinner/> :\n        <Fragment>\n            <Link to='/posts' className=\"btn\">\n                Back To Posts\n            </Link>\n            <PostItem post={post} showActions={false}/>\n            <CommentForm postId={post._id} />\n            <div className=\"comments\">\n                {post.comments.map(comment => (\n                    <CommentItem key={comment._id} comment={comment} postId={post._id}/>\n                ))}\n            </div>\n        </Fragment>\n    )\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps =  state => ({\n    post:state.post\n})\n\nexport default connect(mapStateToProps, {getPost})(Post)\n","import React, {Fragment} from 'react'\n\n\nconst NotFound = props => {\n    return (\n       <Fragment>\n           <h1 className=\"x-large text-primary\">\n               <i className=\"fas fa-exclamation-triangle\"></i> Page Not Found\n           </h1>\n           <p className=\"large\">Sorry, this page does not exist</p>\n       </Fragment>\n    )\n}\n\n\n\n\nexport default NotFound\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n\nexport const PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route {...rest} render={props => !isAuthenticated && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)} />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)","import React from \"react\";\nimport {Route, Switch} from 'react-router-dom';\nimport Register from '../auth/Register'\nimport Login from '../auth/Login'\nimport Alert from '../layout/Alert'\nimport Dashboard from '../dashboard/Dashboard'\nimport Profile from '../profile/Profile'\nimport CreateProfile from '../profile-forms/CreateProfile'\nimport EditProfile from '../profile-forms/EditProfile'\nimport Profiles from '../profiles/Profiles'\nimport AddExperience from '../profile-forms/AddExperience'\nimport AddEducation from '../profile-forms/AddEducation'\nimport Posts from '../posts/Posts'\nimport Post from '../post/Post'\n\n//  NotFound Page\nimport  NotFound from '../layout/NotFound'\n\n//  Private Route Component\nimport PrivateRoute from './PrivateRoute'\n\nconst Routes = () => {\n  return (\n    <section className=\"container\">\n      <Alert />\n      <Switch>\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/profiles\" component={Profiles} />\n        <Route exact path=\"/profile/:id\" component={Profile} />\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\n        <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\n        <PrivateRoute exact path=\"/add-experience\" component={AddExperience} />\n        <PrivateRoute exact path=\"/add-education\" component={AddEducation} />\n        <PrivateRoute exact path=\"/posts\" component={Posts} />\n        <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n        <Route component={NotFound} />\n      </Switch>\n    </section>\n  );\n};\n\nexport default Routes;\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\n\nconst initialState = [];\n\nconst Alert =  function (state = initialState, action) {\n    const { type, payload } = action\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload)\n        default:\n            return state\n    }\n}\n\nexport default Alert","import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('devConnectToken'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n}\n\nexport default (state = initialState, action) => {\n    const { type, payload } = action\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('devConnectToken', payload.token)\n            return {\n                ...state,\n                payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('devConnectToken')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state\n    }\n\n}","import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                // profile:null\n            }\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false\n            }\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading: false\n            }\n        default:\n            return state\n    }\n\n\n}","import {\n    GET_POSTS,\n    GET_POST,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from '../actions/types'\n\nconst initialState = {\n    posts:[],\n    post: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action;\n\n    switch(type){\n        case GET_POSTS:\n            return{\n                ...state,\n                posts:payload,\n                loading:false\n            }\n        case GET_POST:\n            return{\n                ...state,\n                post: payload,\n                loading: false\n            }\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload,...state.posts],\n                loading: false\n            }\n        case DELETE_POST:\n            return{\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            }\n        case POST_ERROR:\n            return{\n                ...state,\n                error:payload,\n                loading:false\n            }\n        case UPDATE_LIKES:\n            return{\n                ...state,\n                posts: state.posts.map(post => post._id === payload.id ? {\n                    ...post, \n                    likes: payload.likes\n                } : post),\n                loading: false\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: {...state.post, comments: payload},\n                loading:false\n            }\n        case REMOVE_COMMENT:\n        return {\n            ...state,\n            post: {\n                ...state.post, \n                comments: state.post.comments.filter(comment => comment._id !== payload),\n            },\n            loading: false\n\n        }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport alert from './alert'\nimport auth from './auth'\nimport profile from './profile'\nimport post from './post'\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    post\n})","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store ","import React, { Fragment, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n//  App Components\nimport Navbar from './components/layout/Navbar'\nimport Landing from './components/layout/Landing'\n\nimport Routes from './components/routing/Routes'\n\n//  Redux\nimport { Provider } from 'react-redux'\nimport store from './store'\n//  App State Management\nimport { loadUser } from './actions/auth'\nimport setAuthToken from './utils/setAuthToken'\n\nimport './App.css';\n\nif (localStorage.devConnectToken) {\n  setAuthToken(localStorage.devConnectToken)\n}\n\nconst App = () => {\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route component={Routes}/>\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}