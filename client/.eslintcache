[{"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/index.js":"1","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/App.js":"2","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reportWebVitals.js":"3","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/store.js":"4","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/auth.js":"5","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/utils/setAuthToken.js":"6","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Alert.js":"7","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Landing.js":"8","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Navbar.js":"9","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/auth/Login.js":"10","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/Dashboard.js":"11","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/auth/Register.js":"12","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/routing/PrivateRoute.js":"13","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/CreateProfile.js":"14","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/alert.js":"15","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/types.js":"16","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/profile.js":"17","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Spinner.js":"18","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/index.js":"19","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/profile.js":"20","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/auth.js":"21","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/alert.js":"22","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/DashboardActions.js":"23","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/EditProfile.js":"24","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/AddExperience.js":"25","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/AddEducation.js":"26","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/Experience.js":"27","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/Education.js":"28","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profiles/Profiles.js":"29","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profiles/ProfileItem.js":"30","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/Profile.js":"31","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileTop.js":"32","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileAbout.js":"33","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileExperience.js":"34","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileEducation.js":"35","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileGithub.js":"36","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/post.js":"37","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/posts/Posts.js":"38","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/post.js":"39","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/posts/PostItem.js":"40","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/posts/PostForm.js":"41","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/post/Post.js":"42","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/post/CommentForm.js":"43","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/post/CommentItem.js":"44","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/NotFound.js":"45","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/routing/Routes.js":"46","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Footer.js":"47"},{"size":479,"mtime":1612311992000,"results":"48","hashOfConfig":"49"},{"size":1047,"mtime":1621640676642,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1612311058000,"results":"51","hashOfConfig":"49"},{"size":367,"mtime":1612361316000,"results":"52","hashOfConfig":"49"},{"size":2207,"mtime":1616336482265,"results":"53","hashOfConfig":"49"},{"size":249,"mtime":1612452188000,"results":"54","hashOfConfig":"49"},{"size":477,"mtime":1612365962000,"results":"55","hashOfConfig":"49"},{"size":1402,"mtime":1621696453169,"results":"56","hashOfConfig":"49"},{"size":1914,"mtime":1621696270098,"results":"57","hashOfConfig":"49"},{"size":2220,"mtime":1621697269817,"results":"58","hashOfConfig":"49"},{"size":2047,"mtime":1616267958681,"results":"59","hashOfConfig":"49"},{"size":3310,"mtime":1621696352107,"results":"60","hashOfConfig":"49"},{"size":571,"mtime":1612567844000,"results":"61","hashOfConfig":"49"},{"size":6824,"mtime":1616249239682,"results":"62","hashOfConfig":"49"},{"size":376,"mtime":1612366662000,"results":"63","hashOfConfig":"49"},{"size":996,"mtime":1616364726843,"results":"64","hashOfConfig":"49"},{"size":6523,"mtime":1616334763037,"results":"65","hashOfConfig":"49"},{"size":313,"mtime":1616268334084,"results":"66","hashOfConfig":"49"},{"size":230,"mtime":1616344441214,"results":"67","hashOfConfig":"49"},{"size":1244,"mtime":1616342727065,"results":"68","hashOfConfig":"49"},{"size":1259,"mtime":1616325784008,"results":"69","hashOfConfig":"49"},{"size":424,"mtime":1616268388934,"results":"70","hashOfConfig":"49"},{"size":641,"mtime":1616247472731,"results":"71","hashOfConfig":"49"},{"size":8108,"mtime":1616267984851,"results":"72","hashOfConfig":"49"},{"size":2981,"mtime":1616268116387,"results":"73","hashOfConfig":"49"},{"size":2993,"mtime":1616268100919,"results":"74","hashOfConfig":"49"},{"size":1545,"mtime":1616257367241,"results":"75","hashOfConfig":"49"},{"size":1531,"mtime":1616268196623,"results":"76","hashOfConfig":"49"},{"size":1401,"mtime":1616267905270,"results":"77","hashOfConfig":"49"},{"size":978,"mtime":1616262050601,"results":"78","hashOfConfig":"49"},{"size":2915,"mtime":1616324662863,"results":"79","hashOfConfig":"49"},{"size":1855,"mtime":1616271158150,"results":"80","hashOfConfig":"49"},{"size":844,"mtime":1616323687291,"results":"81","hashOfConfig":"49"},{"size":828,"mtime":1616323759432,"results":"82","hashOfConfig":"49"},{"size":922,"mtime":1616323955802,"results":"83","hashOfConfig":"49"},{"size":2142,"mtime":1616342565546,"results":"84","hashOfConfig":"49"},{"size":1934,"mtime":1616365189905,"results":"85","hashOfConfig":"49"},{"size":1142,"mtime":1616361627403,"results":"86","hashOfConfig":"49"},{"size":4454,"mtime":1616368259668,"results":"87","hashOfConfig":"49"},{"size":2407,"mtime":1616363862193,"results":"88","hashOfConfig":"49"},{"size":964,"mtime":1616361568519,"results":"89","hashOfConfig":"49"},{"size":1258,"mtime":1616367336652,"results":"90","hashOfConfig":"49"},{"size":1102,"mtime":1616365453632,"results":"91","hashOfConfig":"49"},{"size":1410,"mtime":1616368229050,"results":"92","hashOfConfig":"49"},{"size":366,"mtime":1616372879514,"results":"93","hashOfConfig":"49"},{"size":1709,"mtime":1616373353481,"results":"94","hashOfConfig":"49"},{"size":332,"mtime":1621691341310,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1c2gqbh",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/index.js",[],["202","203"],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/App.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reportWebVitals.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/store.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/auth.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/utils/setAuthToken.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Alert.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Landing.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Navbar.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/auth/Login.js",["204"],"import React, {Fragment, useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {PropTypes} from 'prop-types';\nimport {login} from '../../actions/auth';\n\nimport classes from './Forms.module.css';\n\nfunction Login({login, isAuthenticated}) {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const {email, password} = formData;\n\n  const onChange = (e) =>\n    setFormData({...formData, [e.target.name]: e.target.value});\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  //  Redirected If Logged In\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <div className=\"flex-container container-80-vh\">\n\n      <div className=\"flex-container__item-50\">\n      <p className=\"lead\">\n            <strong className=\"text-primary\">Selftaughtcode.co</strong> is a platform that connects <strong className=\"text-primary\">DIY</strong> web developers.\n        </p>\n      </div>\n\n      <div className=\"flex-container__item-50\">\n        <h2>Log In</h2>\n        <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\n          <div className={classes.formGroup}>\n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n          <div className={classes.formGroup}>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              minLength=\"6\"\n              value={password}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n        </form>\n        <p className=\"my-1\">\n          Dont have an account? <Link to=\"/register\">Sign Up</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/Dashboard.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/auth/Register.js",["205"],"import React, {Fragment, useState} from 'react';\n//  Enables Us To Work With Redux\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport classes from './Forms.module.css';\n\n//   State Management: Actions\nimport {setAlert} from '../../actions/alert';\nimport {register} from '../../actions/auth';\n\n\n//  Destructured & Pulled Out Of Props\nfunction Register({setAlert, register, isAuthenticated}) {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const {name, email, password, password2} = formData;\n\n  const onChange = (e) =>\n    setFormData({...formData, [e.target.name]: e.target.value});\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords Do Not Match', 'danger');\n    } else {\n      register({name, email, password});\n    }\n  };\n\n  //  Redirected If Logged In\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n      <div className=\"flex-container container-80-vh\">\n        <div className=\"flex-container__item-50\">\n        <p className=\"lead\">\n            <strong className=\"text-primary\">Selftaughtcode.co</strong> is a platform that connects <strong className=\"text-primary\">DIY</strong> web developers.\n        </p>\n        </div>\n        <div className=\"flex-container__item-50\">\n        <h2>Create An Account</h2>\n        <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\n          <div className={classes.formGroup}>\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              name=\"name\"\n              value={name}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n          <div className={classes.formGroup}>\n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => onChange(e)}\n            />\n            <small className=\"form-text\">\n              This site uses Gravatar for your profile choose a\n              Gravatar email\n            </small>\n          </div>\n          <div className={classes.formGroup}>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n          <div className={classes.formGroup}>\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              name=\"password2\"\n              value={password2}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n        </form>\n        <p className=\"my-1\">\n          Already have an account? <Link to=\"/login\">Sign In</Link>\n        </p>\n        </div>      \n      </div>\n  );\n}\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {setAlert, register})(Register);\n","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/routing/PrivateRoute.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/alert.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/types.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/profile.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Spinner.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/index.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/profile.js",["206"],"import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS } from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                // profile:null\n            }\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false\n            }\n        case GET_REPOS:\n            return {\n                ...state,\n                repos: payload,\n                loading: false\n            }\n        default:\n            return state\n    }\n\n\n}","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/auth.js",["207"],"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('devConnectToken'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n}\n\nexport default (state = initialState, action) => {\n    const { type, payload } = action\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('devConnectToken', payload.token)\n            return {\n                ...state,\n                payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('devConnectToken')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state\n    }\n\n}","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/alert.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/DashboardActions.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/EditProfile.js",["208"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst EditProfile = ({ profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n      getCurrentProfile();\n      setFormData({\n          company: loading || !profile.company ? '' : profile.company,\n          website: loading || !profile.website ? '' : profile.website,\n          location: loading || !profile.location ? '' : profile.location,\n          status: loading || !profile.status ? '' : profile.status,\n          skills: loading || !profile.skills ? '' : profile.skills.join(','),\n          githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n          bio: loading || !profile.bio ? '' : profile.bio,\n          twitter: loading || !profile.social ? '' : profile.social.twitter,\n          facebook: loading || !profile.social ? '' : profile.social.facebook,\n          linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n          youtube: loading || !profile.social ? '' : profile.social.youtube,\n          instagram: loading || !profile.social ? '' : profile.social.instagram\n      })\n  },[loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    }\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile));\n","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/AddExperience.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile-forms/AddEducation.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/Experience.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/dashboard/Education.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profiles/Profiles.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profiles/ProfileItem.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/Profile.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileTop.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileAbout.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileExperience.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileEducation.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/profile/ProfileGithub.js",["209"],"import React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getGithubRepos } from '../../actions/profile' \n\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\n\n    useEffect(() => {\n        getGithubRepos(username)\n    },[getGithubRepos])\n\n    return (\n        <div className=\"profile-github\">\n            {repos.length > 0 ? (\n                <h2 className=\"text-primary my-1\">Github Repos</h2>\n            ) : (<div></div>)\n                \n            }\n            \n            {repos === null ? <Spinner/> :(\n                repos.map((repo) => (\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n                        <div>\n                            <h4>\n                                <a href=\"repo.html_url\" target=\"_blank\" rel='noopener noreferrer'>\n                                    {repo.name}\n                                </a>\n                            </h4>\n                            <p>{repo.description}</p>\n                        </div>\n                        <div>\n                            <ul>\n                                <li className=\"badge badge-primary\">\n                                    Stars: {repo.stargazers_count}\n                                </li>\n                                <li className=\"badge badge-dark\">\n                                    Watchers: {repo.watchers_count}\n                                </li>\n                                <li className=\"badge badge-light\">\n                                    Forks: {repo.stargazers_count}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    )\n}\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    repos: state.profile.repos\n})\n\n\n\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub)\n","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/reducers/post.js",["210"],"import {\n    GET_POSTS,\n    GET_POST,\n    POST_ERROR,\n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from '../actions/types'\n\nconst initialState = {\n    posts:[],\n    post: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action;\n\n    switch(type){\n        case GET_POSTS:\n            return{\n                ...state,\n                posts:payload,\n                loading:false\n            }\n        case GET_POST:\n            return{\n                ...state,\n                post: payload,\n                loading: false\n            }\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload,...state.posts],\n                loading: false\n            }\n        case DELETE_POST:\n            return{\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            }\n        case POST_ERROR:\n            return{\n                ...state,\n                error:payload,\n                loading:false\n            }\n        case UPDATE_LIKES:\n            return{\n                ...state,\n                posts: state.posts.map(post => post._id === payload.id ? {\n                    ...post, \n                    likes: payload.likes\n                } : post),\n                loading: false\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: {...state.post, comments: payload},\n                loading:false\n            }\n        case REMOVE_COMMENT:\n        return {\n            ...state,\n            post: {\n                ...state.post, \n                comments: state.post.comments.filter(comment => comment._id !== payload),\n            },\n            loading: false\n\n        }\n        default:\n            return state\n    }\n}","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/posts/Posts.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/actions/post.js",["211","212"],"import axios from 'axios'\nimport {setAlert} from './alert'\nimport {GET_POSTS,GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT} from './types'\n\n//  Get Posts \nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts')\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Get Single Post \nexport const getPost = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`)\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Add Like\nexport const addLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`api/posts/like/${id}`)\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {\n                id,\n                likes: res.data\n            }\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Remove Like\nexport const removeLike = id => async dispatch => {\n    try {\n        const res = await axios.put(`api/posts/unlike/${id}`)\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {\n                id,\n                likes: res.data\n            }\n        })\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Delete Post\nexport const deletePost = id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/posts/${id}`)\n        dispatch({\n            type: DELETE_POST,\n            payload: {id}\n        })\n        dispatch(setAlert('Post Removed', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Add Post\nexport const addPost = formData => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type':'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`api/posts/`, formData, config)\n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        })\n        dispatch(setAlert('Post Created', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type':'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config)\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        })\n        dispatch(setAlert('Comment Added', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.statusMessage,\n                status: err.response.status\n            }\n        })\n        \n    }\n}\n\n//  Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n\n    try {\n        const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        })\n        dispatch(setAlert('Comment Removed', 'success'))\n    } catch (err) {\n\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: err.response.message,\n                status: err.response.status\n            }\n        })\n        \n    }\n}","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/posts/PostItem.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/posts/PostForm.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/post/Post.js",["213"],"import React, { Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getPost } from '../../actions/post'\nimport PostItem from '../posts/PostItem'\nimport CommentForm from '../post/CommentForm'\nimport CommentItem from '../post/CommentItem'\nconst Post = ({getPost, post: {post, loading}, match}) => {\n\n    useEffect(() => {\n        getPost(match.params.id)\n    }, [getPost])\n\n    return (\n        loading || post === null ? <Spinner/> :\n        <Fragment>\n            <Link to='/posts' className=\"btn\">\n                Back To Posts\n            </Link>\n            <PostItem post={post} showActions={false}/>\n            <CommentForm postId={post._id} />\n            <div className=\"comments\">\n                {post.comments.map(comment => (\n                    <CommentItem key={comment._id} comment={comment} postId={post._id}/>\n                ))}\n            </div>\n        </Fragment>\n    )\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps =  state => ({\n    post:state.post\n})\n\nexport default connect(mapStateToProps, {getPost})(Post)\n","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/post/CommentForm.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/post/CommentItem.js",["214"],"import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post'\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => {\n  return (\n    <div class=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img\n            class=\"round-img\"\n            src={avatar}\n            alt=\"\"\n          />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p class=\"my-1\">\n          {text}\n        </p>\n        <p class=\"post-date\">Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment></p>\n        {\n            !auth.loading && user === auth.user._id && (\n                <button onClick={e => deleteComment(postId, _id)} type=\"button\" className=\"btn btn-danger\">\n                    <i className=\"fas fa-times\"></i>\n                </button>\n            )\n        }\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);\n","/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/NotFound.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/routing/Routes.js",[],"/Users/chidozieukaigwe/Projects/nodejs-projects/dev-connector/client/src/components/layout/Footer.js",["215","216","217"],"import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport classes from './Footer.module.css';\n\nfunction Footer () {\n  const currentYear = new Date().getFullYear();\n  return (\n    <footer className=\"bg-dark\">\n       <p>&#169; selftaughtcode.co {currentYear}</p>  \n</footer>\n  );\n};\n\nexport default Footer;\n",{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":24},{"ruleId":"226","severity":1,"message":"227","line":11,"column":1,"nodeType":"228","endLine":54,"endColumn":2},{"ruleId":"226","severity":1,"message":"229","line":10,"column":1,"nodeType":"228","endLine":46,"endColumn":2},{"ruleId":"230","severity":1,"message":"231","line":41,"column":5,"nodeType":"232","endLine":41,"endColumn":33,"suggestions":"233"},{"ruleId":"230","severity":1,"message":"234","line":11,"column":7,"nodeType":"232","endLine":11,"endColumn":23,"suggestions":"235"},{"ruleId":"226","severity":1,"message":"227","line":19,"column":1,"nodeType":"228","endLine":81,"endColumn":2},{"ruleId":"222","severity":1,"message":"236","line":98,"column":15,"nodeType":"224","messageId":"225","endLine":98,"endColumn":18},{"ruleId":"222","severity":1,"message":"236","line":175,"column":15,"nodeType":"224","messageId":"225","endLine":175,"endColumn":18},{"ruleId":"230","severity":1,"message":"237","line":14,"column":8,"nodeType":"232","endLine":14,"endColumn":17,"suggestions":"238"},{"ruleId":"222","severity":1,"message":"223","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":24},{"ruleId":"222","severity":1,"message":"239","line":2,"column":9,"nodeType":"224","messageId":"225","endLine":2,"endColumn":13},{"ruleId":"222","severity":1,"message":"240","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":15},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["243"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["244"],"'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["245"],"'Link' is defined but never used.","'classes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"252","text":"253"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"254","text":"255"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"256","text":"257"},[1683,1711],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[332,348],"[getGithubRepos, username]",[504,513],"[getPost, match.params.id]"]